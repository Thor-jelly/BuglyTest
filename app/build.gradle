apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    signingConfigs {
        debug {
            storeFile file('D:\\github\\BuglyTest\\keystore.jks')
            storePassword '123456'
            keyAlias = 'key0'
            keyPassword '123456'
        }
        release{
            storeFile file('D:\\github\\BuglyTest\\keystore.jks')
            storePassword '123456'
            keyAlias = 'key0'
            keyPassword '123456'
        }
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.buglytest"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 2
        versionName '1.0.2'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //bugly 添加ndk
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    buildTypes {
        release {
            manifestPlaceholders = [BUGLY_APPID       : 'e56ae7cc9c',
                                    BUGLY_APP_VERSION : '1.0.0',
                                    BUGLY_APP_CHANNEL : 'release',
                                    BUGLY_ENABLE_DEBUG: false
            ]
            buildConfigField("String", "BUGLY_APPID", "\"e56ae7cc9c\"")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            multiDexEnabled = true

            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
        }
        debug {
            manifestPlaceholders = [BUGLY_APPID       : 'e56ae7cc9c',
                                    BUGLY_APP_VERSION : '1.0.0',
                                    BUGLY_APP_CHANNEL : 'debug',
                                    BUGLY_ENABLE_DEBUG: true
            ]
            buildConfigField("String", "BUGLY_APPID", "\"e56ae7cc9c\"")

            multiDexEnabled = true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility = 1.7
        targetCompatibility = 1.7
    }

    // Tinker推荐模式
    dexOptions {
        jumboMode = true
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    ///////////////////////////bugly bug异常上报
    /////添加升级注释这个  implementation 'com.tencent.bugly:crashreport:3.0.1'
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    ///////implementation 'com.tencent.bugly:nativecrashreport:3.3.1'
    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0

    /////////////////////////////bugly升级
    //注释掉原有bugly的仓库
    //异常上报中添加了
//    implementation 'com.tencent.bugly:crashreport:latest.release'//其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.3.2
    /////////implementation 'com.tencent.bugly:crashreport_upgrade:1.3.6'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.2.0
    //异常上报中添加了
    //    implementation 'com.tencent.bugly:nativecrashreport:3.3.1'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0

    //////////////////////////////热更新添加
    implementation "com.android.support:multidex:1.0.3" // 多dex配置
    // 远程仓库集成方式（推荐）
    //compile 'com.tencent.bugly:crashreport_upgrade:1.3.8'
    implementation 'com.tencent.bugly:crashreport_upgrade:1.4.2'
    //1. 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    //2.为了便于解答问题，这里的tinker版本建议跟随此处demo设置，如果微信更新了tinker版本，bugly会定期同步更新
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.14.3'
    implementation 'com.tencent.bugly:nativecrashreport:3.7.1'
    // walle（多渠道使用）
    // compile 'com.meituan.android.walle:library:1.1.3'
}

// 依赖插件脚本
apply from: 'tinker-support.gradle'

// 多渠道使用walle示例（注：多渠道使用）
//apply from: 'multiple-channel.gradle'